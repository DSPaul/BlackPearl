<blackpearlprism:BlackPearlUserControl x:Class="BlackPearl.Controls.Demo.MultiSelectComboBoxDemoView"
                                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                       xmlns:prism="http://prismlibrary.com/"
                                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                       xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                                       xmlns:controls="clr-namespace:BlackPearl.Controls.CoreLibrary;assembly=BlackPearl.Controls.CoreLibrary"
                                       xmlns:local="clr-namespace:BlackPearl.Controls.Demo"
                                       xmlns:blackpearlprism="clr-namespace:BlackPearl.PrismUI;assembly=BlackPearl.Prism"
                                       IsEnabled="{Binding IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Label Style="{DynamicResource BlackPearlLabel}"
               Content="MultiSelectComboBox"
               FontSize="25" />

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <controls:MultiSelectCombobox ItemSource="{Binding Source, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          SelectedItems="{Binding SelectedItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          DisplayMemberPath="{Binding DisplayMemberPath, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                          ItemSeparator="{Binding ItemSeparator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          AdditionalItemSeparators="{Binding AdditionalItemSeparators, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          LookUpContract="{Binding LookupContract, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                          HorizontalAlignment="Stretch">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding SelectionChangedEventCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </controls:MultiSelectCombobox>
            <GridSplitter Grid.Column="1"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Stretch"
                          ShowsPreview="true"
                          ResizeDirection="Columns"
                          Width="3"
                          Margin="5" />
        </Grid>

        <GridSplitter Grid.Row="2"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Center"
                      ShowsPreview="true"
                      ResizeDirection="Rows"
                      Height="3"
                      Margin="5" />

        <WrapPanel Grid.ColumnSpan="2"
                   Grid.Row="3">
            <Border Style="{DynamicResource DemoBorderStyle}">
                <StackPanel>
                    <Label Style="{DynamicResource BlackPearlLabel}"
                           Content="Item Source - with diacritic texts" />
                    <CheckBox Style="{DynamicResource BlackPearlCheckBox}"
                              FontSize="{DynamicResource BlackPearl.H2FontSize}"
                              IsChecked="{Binding IncludeDiacriticItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Content="Include" />
                </StackPanel>
            </Border>
            <Border Style="{DynamicResource DemoBorderStyle}">
                <StackPanel>
                    <Label Style="{DynamicResource BlackPearlLabel}"
                           Content="Selected Items" />
                    <TextBlock Style="{DynamicResource BlackPearlTextBlock}"
                               FontSize="{DynamicResource BlackPearl.H2FontSize}"
                               Text="{Binding SelectedItemsString}"
                               TextWrapping="WrapWithOverflow" />
                </StackPanel>
            </Border>

            <Border BorderBrush="{StaticResource borderBrush}"
                    Style="{DynamicResource DemoBorderStyle}">
                <StackPanel>
                    <Label Style="{DynamicResource BlackPearlLabel}"
                           Content="Display Member Path" />
                    <ComboBox ItemsSource="{controls:EnumBindingSource EnumType={x:Type local:PersonDisplayPath}}"
                              SelectedItem="{Binding SelectedDisplayPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Style="{DynamicResource BlackPearlComboBox}"
                              Width="50"
                              HorizontalAlignment="Left" />
                </StackPanel>
            </Border>

            <Border BorderBrush="{StaticResource borderBrush}"
                    Style="{DynamicResource DemoBorderStyle}">
                <StackPanel>
                    <Label Style="{DynamicResource BlackPearlLabel}"
                           Content="Item Separator" />
                    <ComboBox ItemsSource="{Binding ItemSeparatorSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                              SelectedItem="{Binding ItemSeparator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Grid.Row="2"
                              Grid.Column="1"
                              Style="{DynamicResource BlackPearlComboBox}"
                              Width="50"
                              HorizontalAlignment="Left" />
                </StackPanel>
            </Border>

            <Border BorderBrush="{StaticResource borderBrush}"
                    Style="{DynamicResource DemoBorderStyle}">
                <StackPanel>
                    <Label Style="{DynamicResource BlackPearlLabel}"
                           Content="Additional Item Separator" />
                    <WrapPanel>
                        <CheckBox Command="{Binding AdditionalSeparatorCheckCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                  Content=';'
                                  Style="{DynamicResource BlackPearlCheckBox}" />
                        <CheckBox Command="{Binding AdditionalSeparatorCheckCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                  Content=','
                                  Style="{DynamicResource BlackPearlCheckBox}" />
                        <CheckBox Command="{Binding AdditionalSeparatorCheckCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                  Content='|'
                                  Style="{DynamicResource BlackPearlCheckBox}" />
                        <CheckBox Command="{Binding AdditionalSeparatorCheckCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
                                  Content='~'
                                  Style="{DynamicResource BlackPearlCheckBox}" />
                    </WrapPanel>
                </StackPanel>
            </Border>

            <Border BorderBrush="{StaticResource borderBrush}"
                    Style="{DynamicResource DemoBorderStyle}">
                <StackPanel>
                    <Label Style="{DynamicResource BlackPearlLabel}"
                           Content="Lookup Contract" />
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <RadioButton Content="Default Lookup Contract (included with Library)"
                                     GroupName="LookUpContractGroup"
                                     IsChecked="{Binding IsDefaultContract, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                     Command="{Binding ChangeLookupContractCommand, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                     CommandParameter="0"
                                     Style="{DynamicResource BlackPearlRadioButton}"
                                     Grid.ColumnSpan="2" />
                        <TextBlock Grid.Row="1"
                                   Grid.ColumnSpan="2"
                                   Text="This is the default contract used for look-up items. Contract does basic string comparison (case-insensitive), suitable for most common scenarios."
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}" />
                        <TextBlock Grid.Row="2"
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}">
                            <Run Text="Support New object Creation - "
                                 FontWeight="Bold" />
                            <Run Text="No" />
                        </TextBlock>
                        <TextBlock Grid.Row="3"
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}">
                            <Run Text="Equal comparison - "
                                 FontWeight="Bold" />
                            <Run Text="string value comparison invariant of case/culture." />
                        </TextBlock>
                        <TextBlock Grid.Row="4"
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}">
                            <Run Text="Look-up comparison - "
                                 FontWeight="Bold" />        
                            <Run Text="string value starts with search-string invariant of case/culture." />
                        </TextBlock>
                    </Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <RadioButton Content="Diacritic Lookup Contract (included with Library)"
                                     GroupName="LookUpContractGroup"
                                     IsChecked="{Binding IsDiacriticContract, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                     Command="{Binding ChangeLookupContractCommand, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                     CommandParameter="1"
                                     Style="{DynamicResource BlackPearlRadioButton}"
                                     Grid.ColumnSpan="2" />
                        <TextBlock Grid.Row="1"
                                   Grid.ColumnSpan="2"
                                   Text="This contract behaves like DefaultLookupContract, except it also supports diacritic string comparisons."
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}" />
                        <TextBlock Grid.Row="2"
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}">
                            <Run Text="Support New object Creation - "
                                 FontWeight="Bold" />
                            <Run Text="No" />
                        </TextBlock>
                        <TextBlock Grid.Row="3"
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}">
                            <Run Text="Equal comparison - "
                                 FontWeight="Bold" />
                            <Run Text="diacritic string value comparison invariant of case/culture." />
                        </TextBlock>
                        <TextBlock Grid.Row="4"
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}">
                            <Run Text="Look-up comparison - "
                                 FontWeight="Bold" />        
                            <Run Text="diacritic string value starts with search-string invariant of case/culture." />
                        </TextBlock>
                    </Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <RadioButton Content="Custom Lookup with object creation support (part of Demo app only)"
                                     GroupName="LookUpContractGroup"
                                     IsChecked="{Binding IsCustomContract, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                     Command="{Binding ChangeLookupContractCommand, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                     CommandParameter="2"
                                     Style="{DynamicResource BlackPearlRadioButton}"
                                     Grid.ColumnSpan="2" />
                        <TextBlock Grid.Row="1"
                                   Grid.ColumnSpan="2"
                                   Text="This contract is used for look-up and creation of custom complex object. If control supports new item (complex object) creation, ILookUpContract.CreateObject need to be implemented. Method receives input string and contract needs to provide implementation of parsing that string into copmplex object."
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}" />
                        <TextBlock Grid.Row="2"
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}">
                            <Run Text="Support New object Creation - "
                                 FontWeight="Bold" />
                            <Run Text="No" />
                        </TextBlock>
                        <TextBlock Grid.Row="3"
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}">
                            <Run Text="Equal comparison - "
                                 FontWeight="Bold" />
                            <Run Text="Person.Name value is equal invariant of case/culture." />
                        </TextBlock>
                        <TextBlock Grid.Row="4"
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}">
                            <Run Text="Look-up comparison - "
                                 FontWeight="Bold" />        
                            <Run Text="Person.Name, Person.Company or Person.Zip value contains search string invariant of case/culture." />
                        </TextBlock>
                        <TextBlock Grid.Row="5"
                                   TextWrapping="WrapWithOverflow"
                                   Style="{DynamicResource BlackPearlTextBlock}">
                            <Run Text="Input String (creating new object) -"
                                 FontWeight="Bold" />        
                            <Run Text=" {Name},{Company},{ZipCode} " />
                        </TextBlock>
                    </Grid>
                </StackPanel>
            </Border>

        </WrapPanel>
    </Grid>
</blackpearlprism:BlackPearlUserControl>